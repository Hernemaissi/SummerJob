# == Schema Information
#
# Table name: games
#
#  id                           :integer          not null, primary key
#  current_round                :integer          default(1)
#  max_rounds                   :integer          default(3)
#  created_at                   :datetime         not null
#  updated_at                   :datetime         not null
#  sub_round                    :integer          default(1)
#  calculating                  :boolean          default(FALSE)
#  finished                     :boolean          default(FALSE)
#  results_published            :boolean          default(TRUE)
#  low_budget_min_operator      :decimal(, )      default(1000.0)
#  low_budget_max_operator      :decimal(, )      default(2000.0)
#  low_budget_cap_operator      :integer          default(20)
#  high_budget_min_operator     :decimal(, )      default(3000.0)
#  high_budget_max_operator     :decimal(, )      default(5000.0)
#  high_budget_cap_operator     :integer          default(40)
#  low_luxury_min_operator      :decimal(, )      default(10000.0)
#  low_luxury_max_operator      :decimal(, )      default(20000.0)
#  low_luxury_cap_operator      :integer          default(10)
#  high_luxury_min_operator     :decimal(, )      default(50000.0)
#  high_luxury_max_operator     :decimal(, )      default(100000.0)
#  high_luxury_cap_operator     :integer          default(5)
#  low_budget_var_max_operator  :decimal(, )      default(20000.0)
#  low_luxury_var_max_operator  :decimal(, )      default(30000.0)
#  high_budget_var_max_operator :decimal(, )      default(50000.0)
#  high_luxury_var_max_operator :decimal(, )      default(80000.0)
#  low_budget_var_min_operator  :decimal(, )      default(10000.0)
#  low_luxury_var_min_operator  :decimal(, )      default(15000.0)
#  high_budget_var_min_operator :decimal(, )      default(20000.0)
#  high_luxury_var_min_operator :decimal(, )      default(30000.0)
#  low_budget_min_customer      :decimal(, )      default(1000.0)
#  low_budget_max_customer      :decimal(, )      default(2000.0)
#  low_budget_cap_customer      :integer          default(20)
#  high_budget_min_customer     :decimal(, )      default(3000.0)
#  high_budget_max_customer     :decimal(, )      default(5000.0)
#  high_budget_cap_customer     :integer          default(40)
#  low_luxury_min_customer      :decimal(, )      default(10000.0)
#  low_luxury_max_customer      :decimal(, )      default(20000.0)
#  low_luxury_cap_customer      :integer          default(10)
#  high_luxury_min_customer     :decimal(, )      default(50000.0)
#  high_luxury_max_customer     :decimal(, )      default(100000.0)
#  high_luxury_cap_customer     :integer          default(5)
#  low_budget_var_max_customer  :decimal(, )      default(20000.0)
#  low_luxury_var_max_customer  :decimal(, )      default(30000.0)
#  high_budget_var_max_customer :decimal(, )      default(50000.0)
#  high_luxury_var_max_customer :decimal(, )      default(80000.0)
#  low_budget_var_min_customer  :decimal(, )      default(10000.0)
#  low_luxury_var_min_customer  :decimal(, )      default(15000.0)
#  high_budget_var_min_customer :decimal(, )      default(20000.0)
#  high_luxury_var_min_customer :decimal(, )      default(30000.0)
#  low_budget_min_tech          :decimal(, )      default(1000.0)
#  low_budget_max_tech          :decimal(, )      default(2000.0)
#  low_budget_cap_tech          :integer          default(20)
#  high_budget_min_tech         :decimal(, )      default(3000.0)
#  high_budget_max_tech         :decimal(, )      default(5000.0)
#  high_budget_cap_tech         :integer          default(40)
#  low_luxury_min_tech          :decimal(, )      default(10000.0)
#  low_luxury_max_tech          :decimal(, )      default(20000.0)
#  low_luxury_cap_tech          :integer          default(10)
#  high_luxury_min_tech         :decimal(, )      default(50000.0)
#  high_luxury_max_tech         :decimal(, )      default(100000.0)
#  high_luxury_cap_tech         :integer          default(5)
#  low_budget_var_max_tech      :decimal(, )      default(20000.0)
#  low_luxury_var_max_tech      :decimal(, )      default(30000.0)
#  high_budget_var_max_tech     :decimal(, )      default(50000.0)
#  high_luxury_var_max_tech     :decimal(, )      default(80000.0)
#  low_budget_var_min_tech      :decimal(, )      default(10000.0)
#  low_luxury_var_min_tech      :decimal(, )      default(15000.0)
#  high_budget_var_min_tech     :decimal(, )      default(20000.0)
#  high_luxury_var_min_tech     :decimal(, )      default(30000.0)
#  low_budget_min_supply        :decimal(, )      default(1000.0)
#  low_budget_max_supply        :decimal(, )      default(2000.0)
#  low_budget_cap_supply        :integer          default(20)
#  high_budget_min_supply       :decimal(, )      default(3000.0)
#  high_budget_max_supply       :decimal(, )      default(5000.0)
#  high_budget_cap_supply       :integer          default(40)
#  low_luxury_min_supply        :decimal(, )      default(10000.0)
#  low_luxury_max_supply        :decimal(, )      default(20000.0)
#  low_luxury_cap_supply        :integer          default(10)
#  high_luxury_min_supply       :decimal(, )      default(50000.0)
#  high_luxury_max_supply       :decimal(, )      default(100000.0)
#  high_luxury_cap_supply       :integer          default(5)
#  low_budget_var_max_supply    :decimal(, )      default(20000.0)
#  low_luxury_var_max_supply    :decimal(, )      default(30000.0)
#  high_budget_var_max_supply   :decimal(, )      default(50000.0)
#  high_luxury_var_max_supply   :decimal(, )      default(80000.0)
#  low_budget_var_min_supply    :decimal(, )      default(10000.0)
#  low_luxury_var_min_supply    :decimal(, )      default(15000.0)
#  high_budget_var_min_supply   :decimal(, )      default(20000.0)
#  high_luxury_var_min_supply   :decimal(, )      default(30000.0)
#  variable_hash                :text
#  sub_round_decided            :boolean
#  sign_up_open                 :boolean          default(TRUE)
#

require 'test_helper'

class GameTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end
